#!/bin/bash
Version=1.02
Myname="${0##*/}"

:<<'DOC'
= pgr - list processes matching an regular expression

= Synopsis
pgr [options] [regexp]	

== Options
-h|--help	print a help message and exit
-H|--Help	print print full documentation via less and exit
-V|--version	print version and exit
-k|--kill	kill process if only one match

= Description
pgr matches the lines generated by
   ps wwax
and lists the line matching the given regular expression, skipping its
own process. The exit status is 0 if matching lines are found, 1 if
nothing found. With the -k option, if there is only one match, the
process is killed.

= Author
[Wybo Dekker](wybodekker@me.com)

= Copyright
Released under the [GNU General Public License](www.gnu.org/copyleft/gpl.html)
DOC

Red='\e[38;5;1m' Mag='\e[38;5;5m' Nor='\e[0m'
    die() { local i; for i; do echo -e "$Myname: $Red$i"; done 1>&2; exit 1; }
   Warn() { local i; for i; do echo -e "$Myname: $Mag$i$Nor"; done 1>&2; }
helpsrt() { sed -n '/^= Synopsis/,/^= /p' "$0"|sed '1d;$d'; exit; }
helpall() { sed -n "/^:<<'DOC'$/,/^DOC/p" "$0"|sed '1d;$d'|
            less -P"$Myname-${Version/./Â·} (press h for help, q to quit)";exit; }
cmd="$0 $*"

if ! options=$(getopt \
   -n "$Myname" \
   -o kfhHVI \
   -l kill,force,help,Help,version \
   -- "$@"
); then exit 1; fi
eval set -- "$options"
kill=false force=false
while [ $# -gt 0 ]; do
   case $1 in
      (-h|--help)         # print a help message and exit
			  helpsrt
			  ;;
      (-H|--Help)         # print print full documentation via less and exit
			  helpall
			  ;;
      (-V|--version)      # print version and exit
			  echo $Version
			  exit
			  ;;
      (-k|--kill)         # kill process if only one match
			  kill=true
			  shift
			  ;;
      (-f|--force)        # kill processes even if multiple matches
			  force=true
			  shift
			  ;;
      (-I)		  instscript "$0" ||
			     die 'the -I option is for developers only'
			  exit
			  ;;
      (--)                shift
			  break
			  ;;
      (*)                 break
			  ;;
   esac
done

re="$1" n=0
while read -r line; do
   [[ $line =~ ${cmd}$ ]] && continue
   [[ $line =~ $re ]] && {
      echo "$line"
      (( n++ ))
      proc+=" ${line%% *}"
   }
done < <(ps wwax) # ww for unlimited width, ax for all processes

if $kill; then
   case $n in
   (0) Warn "no match: nothing killed"
       ;;
   (1) kill -9 "$proc"
       Warn "killed 1 process"
       ;;
   (*) if $force; then
          eval "kill -9 $proc"
          Warn "killed $n processes"
       else
          Warn "multiple matches: nothing killed"
       fi
   esac
fi

(( n>0 )) && exit 0
exit 1

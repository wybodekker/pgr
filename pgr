#!/bin/bash
Version=1.01
Myname="${0##*/}"

:<<'DOC'
= pgr - list processes matching an regular expression

= Synopsis
pgr [options] [regexp]	

== Options
-h|--help	print a help message and exit
-H|--Help	print print full documentation via less and exit
-V|--version	print version and exit
-k|--kill	kill process if only one match

= Description
pgr matches the lines generated by
   ps wwax
and lists the line matching the given regular expression, skipping its
own process. The exit status is 0 if matching lines are found, 1 if
nothing found. With the -k option, if there is only one match, the
process is killed.

= Author
[Wybo Dekker](wybo@dekkerdocumenten.nl)

= Copyright
Released under the [GNU General Public License](www.gnu.org/copyleft/gpl.html)
DOC

Red='\e[38;5;1m'
    die() { local i; for i; do echo -e "$Myname: $Red$i"; done 1>&2; exit 1; }
helpsrt() { sed -n '/^= Synopsis/,/^= /p' "$0"|sed '1d;$d'; exit; }
helpall() { sed -n "/^:<<'DOC'$/,/^DOC/p" "$0"|sed '1d;$d'|
            less -P"$Myname-${Version/./Â·} (press h for help, q to quit)";exit; }
cmd="$0 $*"

if ! options=$(getopt \
   -n "$Myname" \
   -o khHVI \
   -l kill,help,Help,version \
   -- "$@"
); then exit 1; fi
eval set -- "$options"
kill=false
while [ $# -gt 0 ]; do
   case $1 in
      (-h|--help)         # print a help message and exit
			  helpsrt
			  ;;
      (-H|--Help)         # print print full documentation via less and exit
			  helpall
			  ;;
      (-V|--version)      # print version and exit
			  echo $Version
			  exit
			  ;;
      (-k|--kill)         # kill process if only one match
			  kill=true
			  shift
			  ;;
      (-I)		  instscript "$0" ||
			     die 'the -I option is for developers only'
			  exit
			  ;;
      (--)                shift
			  break
			  ;;
      (*)                 break
			  ;;
   esac
done

re="$1" n=0
while read -r line; do
   [[ $line =~ ${cmd}$ ]] && continue
   [[ $line =~ $re ]] && {
      echo "$line"
      (( n++ ))
      proc=${line%% *}
   }
done < <(ps wwax) # ww for unlimited width, ax for all processes
if $kill; then
   if (( n == 1 )); then
      kill -9 "$proc"
      die killed
   else
      die "no or multiple matches: nothing killed"
   fi
fi
